{"version":3,"sources":["../src/cli.tsx","../src/App.tsx","../src/components/Intro.tsx","../src/components/Setup.tsx","../src/components/About.tsx","../src/components/Help.tsx","../package.json"],"sourcesContent":["import React from 'react';\nimport {render} from 'ink';\nimport App from './App.js';\nimport {Help} from './components/Help.js';\nimport packageJson from '../package.json' with {type: 'json'};\n\ntype Flags = Record<string, string | boolean>;\n\ntype ParsedArgs = {\n  command: string;\n  flags: Flags;\n  showHelp: boolean;\n  showVersion: boolean;\n};\n\nfunction parseArgv(argv: string[]): ParsedArgs {\n  const flags: Flags = {};\n  const positionals: string[] = [];\n  let showHelp = false;\n  let showVersion = false;\n\n  for (let index = 0; index < argv.length; index += 1) {\n    const value = argv[index];\n\n    if (value === '--help' || value === '-h') {\n      showHelp = true;\n      continue;\n    }\n\n    if (value === '--version' || value === '-v') {\n      showVersion = true;\n      continue;\n    }\n\n    if (value.startsWith('--')) {\n      const [name, inline] = value.slice(2).split('=');\n\n      if (inline !== undefined && inline.length > 0) {\n        flags[name] = inline;\n        continue;\n      }\n\n      const next = argv[index + 1];\n      if (next !== undefined && !next.startsWith('-')) {\n        flags[name] = next;\n        index += 1;\n      } else {\n        flags[name] = true;\n      }\n\n      continue;\n    }\n\n    if (value.startsWith('-') && value.length > 1) {\n      const name = value.slice(1);\n      const next = argv[index + 1];\n      if (next !== undefined && !next.startsWith('-')) {\n        flags[name] = next;\n        index += 1;\n      } else {\n        flags[name] = true;\n      }\n      continue;\n    }\n\n    positionals.push(value);\n  }\n\n  if (flags.t !== undefined && flags.threshold === undefined) {\n    flags.threshold = flags.t;\n    delete flags.t;\n  }\n\n  if (flags.T !== undefined && flags.total === undefined) {\n    flags.total = flags.T;\n    delete flags.T;\n  }\n\n  return {\n    command: positionals[0] ?? 'intro',\n    flags,\n    showHelp,\n    showVersion\n  };\n}\n\nfunction showHelpScreen(version: string) {\n  const instance = render(<Help version={version} />);\n  instance.waitUntilExit().then(() => process.exit(0));\n}\n\nfunction showVersion(version: string) {\n  console.log(version);\n  process.exit(0);\n}\n\nconst {command, flags, showHelp, showVersion: shouldShowVersion} = parseArgv(\n  process.argv.slice(2)\n);\n\nif (shouldShowVersion) {\n  showVersion(packageJson.version);\n}\n\nif (showHelp) {\n  showHelpScreen(packageJson.version);\n} else {\n  render(<App command={command} flags={flags} version={packageJson.version} />);\n}\n","import React from 'react';\nimport {Box, Text} from 'ink';\nimport {Intro} from './components/Intro.js';\nimport {Setup} from './components/Setup.js';\nimport {About} from './components/About.js';\n\ntype AppProps = {\n  command: string;\n  flags: Record<string, string | boolean>;\n  version: string;\n};\n\nfunction parseNumber(value: string | boolean | undefined, fallback: number) {\n  if (typeof value === 'string') {\n    const parsed = Number(value);\n    if (Number.isFinite(parsed) && parsed > 0) {\n      return parsed;\n    }\n  }\n\n  return fallback;\n}\n\nfunction StatusStub() {\n  return (\n    <Box flexDirection=\"column\" paddingX={1}>\n      <Text color=\"cyanBright\">Status probes are on the roadmap.</Text>\n      <Text>\n        The goal is to query Igloo Desktop, Frost2x, and other bifrost nodes to\n        confirm relay reachability plus signer readiness.\n      </Text>\n      <Text>\n        Open an issue if you would like to help shape the diagnostics payloads.\n      </Text>\n    </Box>\n  );\n}\n\nexport function App({command, flags, version}: AppProps) {\n  const normalized = command.toLowerCase();\n  const threshold = parseNumber(flags.threshold, 2);\n  const total = parseNumber(flags.total, 3);\n\n  switch (normalized) {\n    case 'setup':\n      return <Setup threshold={threshold} total={total} />;\n    case 'about':\n      return <About />;\n    case 'status':\n      return <StatusStub />;\n    default:\n      return (\n        <Intro\n          version={version}\n          commandExamples={[\n            'igloo-cli setup --threshold 2 --total 3',\n            'igloo-cli about',\n            'igloo-cli status'\n          ]}\n        />\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {Box, Text} from 'ink';\n\ntype IntroProps = {\n  version: string;\n  commandExamples: string[];\n};\n\nexport function Intro({version, commandExamples}: IntroProps) {\n  return (\n    <Box flexDirection=\"column\" paddingX={1}>\n      <Box marginTop={1} flexDirection=\"column\" alignItems=\"center\">\n        <Text color=\"cyanBright\">IGLOO CLI</Text>\n        <Text color=\"white\">FROSTR remote signing toolkit</Text>\n        <Text color=\"gray\">version {version}</Text>\n      </Box>\n\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text color=\"cyan\">What you can do right now</Text>\n        <Text>- igloo-cli setup -- bootstrap a FROSTR signing stack</Text>\n        <Text>- igloo-cli about -- learn about the protocol</Text>\n        <Text>- igloo-cli status -- quick health probes (coming soon)</Text>\n      </Box>\n\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text color=\"cyan\">Quick start</Text>\n        {commandExamples.map(example => (\n          <Text key={example}>â€º {example}</Text>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, Text} from 'ink';\n\ntype SetupProps = {\n  threshold: number;\n  total: number;\n};\n\nexport function Setup({threshold, total}: SetupProps) {\n  return (\n    <Box flexDirection=\"column\" paddingX={1}>\n      <Text color=\"cyanBright\">Bootstrap your FROSTR signing circle</Text>\n      <Box flexDirection=\"column\" marginTop={1}>\n        <Text>1. Launch Igloo Desktop and create a fresh nsec.</Text>\n        <Text>\n          2. Split it into a {threshold}/{total} share set; stash the recovery share\n          offline.\n        </Text>\n        <Text>\n          3. Load one share into Igloo Desktop, configure nostr relays, and start\n          the local signer.\n        </Text>\n        <Text>\n          4. Load an additional share into Frost2x or another remote signer so it\n          can co-sign requests.\n        </Text>\n        <Text>\n          5. Share relay URLs with every signer; all nodes must speak on the same\n          relays.\n        </Text>\n      </Box>\n      <Box flexDirection=\"column\" marginTop={1}>\n        <Text color=\"cyan\">Next actions</Text>\n        <Text>- \"igloo-cli status\" -- planned: probe connected signers.</Text>\n        <Text>- \"igloo-cli rotate\" -- planned: guide share rotation drills.</Text>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, Text} from 'ink';\n\nexport function About() {\n  return (\n    <Box flexDirection=\"column\" paddingX={1}>\n      <Text color=\"cyanBright\">Why FROSTR</Text>\n      <Box flexDirection=\"column\" marginTop={1}>\n        <Text>- Break any nsec into durable Shamir shares.</Text>\n        <Text>- Compose flexible k-of-n multi signer networks.</Text>\n        <Text>- Keep your npub and signature shapes unchanged.</Text>\n        <Text>- Rotate shares on demand without touching clients.</Text>\n        <Text>- Communicate over encrypted nostr relays via bifrost.</Text>\n      </Box>\n      <Box flexDirection=\"column\" marginTop={1}>\n        <Text color=\"cyan\">Other Igloo projects</Text>\n        <Text>- Igloo Desktop: local signing device and share manager.</Text>\n        <Text>- Frost2x: browser signer that speaks NIP-07 and NIP-46.</Text>\n        <Text>- Igloo Server: personal relay and signing service.</Text>\n        <Text>- Igloo Mobile and Serverless: upcoming footprints.</Text>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, Text} from 'ink';\n\ntype HelpProps = {\n  version: string;\n};\n\nexport function Help({version}: HelpProps) {\n  return (\n    <Box flexDirection=\"column\" paddingX={1}>\n      <Text color=\"cyanBright\">igloo-cli v{version}</Text>\n      <Text>Usage: igloo-cli [command] [options]</Text>\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text color=\"cyan\">Commands</Text>\n        <Text>- intro (default)  Show the animated welcome.</Text>\n        <Text>- setup            Step through signer bootstrapping.</Text>\n        <Text>- about            Outline the FROSTR stack.</Text>\n      </Box>\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text color=\"cyan\">Options</Text>\n        <Text>-h, --help       Print this message.</Text>\n        <Text>-v, --version    Print the version.</Text>\n        <Text>--threshold n    Override default share threshold.</Text>\n        <Text>--total n        Override total number of shares.</Text>\n      </Box>\n    </Box>\n  );\n}\n","{\n  \"name\": \"igloo-cli\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Command-line companion for the FROSTR ecosystem.\",\n  \"main\": \"dist/cli.js\",\n  \"scripts\": {\n    \"test\": \"npm run typecheck\",\n    \"build\": \"tsup\",\n    \"dev\": \"tsx src/cli.tsx\",\n    \"start\": \"node dist/cli.js\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/FROSTR-ORG/igloo-cli.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/FROSTR-ORG/igloo-cli/issues\"\n  },\n  \"homepage\": \"https://github.com/FROSTR-ORG/igloo-cli#readme\",\n  \"dependencies\": {\n    \"ink\": \"^6.3.1\",\n    \"react\": \"^19.1.1\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^24.6.1\",\n    \"@types/react\": \"^19.1.16\",\n    \"tsup\": \"^8.5.0\",\n    \"tsx\": \"^4.20.6\",\n    \"typescript\": \"^5.9.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"bin\": {\n    \"igloo-cli\": \"dist/cli.js\",\n    \"igloo\": \"dist/cli.js\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"type\": \"module\"\n}\n"],"mappings":"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","names":["Box","Text","Box","Text","jsx","jsxs","Box","Text","jsx","jsxs","jsx","jsxs","Box","Text","command","flags","Box","Text","jsx","jsxs","jsx","flags","showHelp","showVersion"]}