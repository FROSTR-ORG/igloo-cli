declare const _default: {
    base: {
        any: import("zod").ZodAny;
        base58: import("zod").ZodString;
        base64: import("zod").ZodString;
        b64url: import("zod").ZodString;
        bech32: import("zod").ZodString;
        big: import("zod").ZodBigInt;
        bool: import("zod").ZodBoolean;
        date: import("zod").ZodDate;
        hex32: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        hex16: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        hex20: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        hex64: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        hex: import("zod").ZodEffects<import("zod").ZodString, string, string>;
        literal: import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodNumber, import("zod").ZodBoolean, import("zod").ZodNull]>;
        num: import("zod").ZodNumber;
        pubkey: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        str: import("zod").ZodString;
        stamp: import("zod").ZodNumber;
        uint: import("zod").ZodNumber;
        url: import("zod").ZodString;
    };
    event: {
        signed: import("zod").ZodObject<import("zod").objectUtil.extendShape<import("zod").objectUtil.extendShape<{
            content: import("zod").ZodString;
            created_at: import("zod").ZodNumber;
            kind: import("zod").ZodNumber;
            pubkey: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
            tags: import("zod").ZodArray<import("zod").ZodArray<import("zod").ZodString, "many">, "many">;
        }, {
            id: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        }>, {
            sig: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        }>, "strip", import("zod").ZodTypeAny, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
            id: string;
            sig: string;
        }, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
            id: string;
            sig: string;
        }>;
        tags: import("zod").ZodArray<import("zod").ZodString, "many">;
        template: import("zod").ZodObject<{
            content: import("zod").ZodString;
            created_at: import("zod").ZodNumber;
            kind: import("zod").ZodNumber;
            pubkey: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
            tags: import("zod").ZodArray<import("zod").ZodArray<import("zod").ZodString, "many">, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
        }, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
        }>;
        unsigned: import("zod").ZodObject<import("zod").objectUtil.extendShape<{
            content: import("zod").ZodString;
            created_at: import("zod").ZodNumber;
            kind: import("zod").ZodNumber;
            pubkey: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
            tags: import("zod").ZodArray<import("zod").ZodArray<import("zod").ZodString, "many">, "many">;
        }, {
            id: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        }>, "strip", import("zod").ZodTypeAny, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
            id: string;
        }, {
            content: string;
            created_at: number;
            kind: number;
            pubkey: string;
            tags: string[][];
            id: string;
        }>;
    };
    msg: {
        envelope: import("zod").ZodTuple<[import("zod").ZodString, import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>, import("zod").ZodString], null>;
    };
};
export default _default;
