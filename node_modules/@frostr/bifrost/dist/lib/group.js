import { Buff } from '@cmdcode/buff';
import { get_commits_prefix } from '@cmdcode/frost/lib';
import { get_pubkey } from '../util/crypto.js';
import { Assert } from '../util/assert.js';
export function get_group_id(group) {
    const prefix = get_commits_prefix(group.commits);
    const preimg = Buff.join([prefix, group.group_pk]);
    return preimg.digest.hex;
}
export function get_commit_by_pubkey(commits, pubkey) {
    const commit = commits.find(e => e.pubkey === pubkey);
    Assert.exists(commit, 'commit package not found for pubkey: ' + pubkey);
    return commit;
}
export function get_commit_by_idx(commits, idx) {
    const commit = commits.find(e => e.idx === idx);
    Assert.exists(commit, 'commit package not found for idx: ' + idx);
    return commit;
}
export function is_group_member(group, share) {
    const idx = share.idx;
    const pubkey = get_pubkey(share.seckey, 'ecdsa');
    return group.commits.some(e => e.idx === idx && e.pubkey === pubkey);
}
