import { z } from 'zod';
type Literal = z.infer<typeof literal>;
type Json = Literal | {
    [key: string]: Json;
} | Json[];
declare const literal: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
declare const _default: {
    any: z.ZodAny;
    base58: z.ZodString;
    base64: z.ZodString;
    base64url: z.ZodString;
    bech32: z.ZodString;
    big: z.ZodBigInt;
    bool: z.ZodBoolean;
    date: z.ZodDate;
    hex20: z.ZodEffects<z.ZodEffects<z.ZodString, string, string>, string, string>;
    hex32: z.ZodEffects<z.ZodEffects<z.ZodString, string, string>, string, string>;
    hex33: z.ZodEffects<z.ZodEffects<z.ZodString, string, string>, string, string>;
    hex64: z.ZodEffects<z.ZodEffects<z.ZodString, string, string>, string, string>;
    hex: z.ZodEffects<z.ZodString, string, string>;
    json: z.ZodType<Json, z.ZodTypeDef, Json>;
    literal: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
    num: z.ZodNumber;
    sats: z.ZodBigInt;
    str: z.ZodString;
    stamp: z.ZodNumber;
    uint: z.ZodNumber;
};
export default _default;
